services:
 zookeeper-1:
   container_name: zookeeper-1
   hostname: zookeeper-1
   image: confluentinc/cp-zookeeper:7.4.4
   environment:
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: "sasl"
     ZOOKEEPER_AUTH_PROVIDER_1: "org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
     ZOOKEEPER_SASL_ENABLED: "true"
     KAFKA_OPTS:
       -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
       -Dquorum.cnxn.threads.size=20
       -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
       -Dzookeeper.allowSaslFailedClients=false
       -DjaasLoginRenew=3600000
   volumes:
     - data-zookeeper-log-1:/var/lib/zookeeper/log
     - data-zookeeper-data-1:/var/lib/zookeeper/data
     - ./config/zookeeper.sasl.jaas.conf:/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
   networks:
     - confluent

 kafka-1:
   image: confluentinc/cp-kafka:7.4.4
   container_name: kafka-1
   networks:
     - confluent
   ports:
     - 9092:9092
     - 9093:9093
   depends_on:
     - zookeeper-1
   environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
     KAFKA_LISTENERS: BOB://0.0.0.0:9091,PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093
     KAFKA_ADVERTISED_LISTENERS: BOB://kafka-1:9091,PLAINTEXT://localhost:9092,SASL_SSL://localhost:9093
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BOB:PLAINTEXT, PLAINTEXT:PLAINTEXT, SASL_SSL:SASL_SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: BOB
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
     KAFKA_ZOOKEEPER_SET_ACL: 'true'
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin;User:ANONYMOUS"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
     KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-1.keystore.pkcs12
     KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
     KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
     KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-1.truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1_truststore_creds
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
   volumes:
     - data-kafka-1:/var/lib/kafka/data
     - ./kafka-1-creds:/etc/kafka/jaas
     - ./kafka-1-creds:/etc/kafka/secrets

 kafka-2:
   image: confluentinc/cp-kafka:7.4.4
   container_name: kafka-2
   networks:
     - confluent
   ports:
     - 9094:9094
     - 9095:9095
   depends_on:
     - zookeeper-1
   environment:
     KAFKA_BROKER_ID: 2
     KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
     KAFKA_LISTENERS: BOB://0.0.0.0:9096,PLAINTEXT://0.0.0.0:9094,SASL_SSL://0.0.0.0:9095
     KAFKA_ADVERTISED_LISTENERS: BOB://kafka-2:9096,PLAINTEXT://localhost:9094,SASL_SSL://localhost:9095
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BOB:PLAINTEXT, PLAINTEXT:PLAINTEXT, SASL_SSL:SASL_SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: BOB
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
     KAFKA_ZOOKEEPER_SET_ACL: 'true'
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin;User:ANONYMOUS"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
     KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-2.keystore.pkcs12
     KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
     KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
     KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-2.truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2_truststore_creds
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
   volumes:
     - data-kafka-2:/var/lib/kafka/data
     - ./kafka-2-creds:/etc/kafka/jaas
     - ./kafka-2-creds:/etc/kafka/secrets

 kafka-3:
   image: confluentinc/cp-kafka:7.4.4
   container_name: kafka-3
   networks:
     - confluent
   ports:
     - 9097:9097
     - 9098:9098
   depends_on:
     - zookeeper-1
   environment:
     KAFKA_BROKER_ID: 3
     KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
     KAFKA_LISTENERS: BOB://0.0.0.0:9099,PLAINTEXT://0.0.0.0:9097,SASL_SSL://0.0.0.0:9098
     KAFKA_ADVERTISED_LISTENERS: BOB://kafka-3:9099,PLAINTEXT://localhost:9097,SASL_SSL://localhost:9098
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BOB:PLAINTEXT,PLAINTEXT:PLAINTEXT, SASL_SSL:SASL_SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: BOB
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
     KAFKA_ZOOKEEPER_SET_ACL: 'true'
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin;User:ANONYMOUS"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
     KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-3.keystore.pkcs12
     KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-3_keystore_creds
     KAFKA_SSL_KEY_CREDENTIALS: kafka-3_sslkey_creds
     KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-3.truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-3_truststore_creds
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
   volumes:
     - data-kafka-3:/var/lib/kafka/data
     - ./kafka-3-creds:/etc/kafka/jaas
     - ./kafka-3-creds:/etc/kafka/secrets

#  zookeeper-2:
#    container_name: zookeeper-2
#    hostname: zookeeper-2
#    image: confluentinc/cp-zookeeper:7.4.4
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: "sasl"
#      ZOOKEEPER_AUTH_PROVIDER_1: "org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
#      ZOOKEEPER_SASL_ENABLED: "true"
#      KAFKA_OPTS:
#        -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
#        -Dquorum.cnxn.threads.size=20
#        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
#        -Dzookeeper.allowSaslFailedClients=false
#        -DjaasLoginRenew=3600000
#    volumes:
#      - data-zookeeper-log-2:/var/lib/zookeeper/log
#      - data-zookeeper-data-2:/var/lib/zookeeper/data
#      - ./config/zookeeper.sasl.jaas.conf:/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
#    networks:
#      - confluent

#  kafka-4:
#    image: confluentinc/cp-kafka:7.4.4
#    container_name: kafka-4
#    networks:
#      - confluent
#    ports:
#      - 9100:9100
#      - 9101:9101
#    depends_on:
#      - zookeeper-2
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper-2:2181
#      KAFKA_LISTENERS: BOB://0.0.0.0:9102,PLAINTEXT://0.0.0.0:9100,SASL_SSL://0.0.0.0:9101
#      KAFKA_ADVERTISED_LISTENERS: BOB://kafka-4:9102, PLAINTEXT://localhost:9100,SASL_SSL://localhost:9101
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BOB:PLAINTEXT, PLAINTEXT:PLAINTEXT, SASL_SSL:SASL_SSL
#      KAFKA_INTER_BROKER_LISTENER_NAME: BOB
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
#      KAFKA_DELETE_TOPIC_ENABLE: true
#      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
#      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
#      KAFKA_ZOOKEEPER_SET_ACL: 'true'
#      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
#      KAFKA_SUPER_USERS: "User:admin;User:ANONYMOUS"
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
#      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-4.keystore.pkcs12
#      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-4_keystore_creds
#      KAFKA_SSL_KEY_CREDENTIALS: kafka-4_sslkey_creds
#      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-4.truststore.jks
#      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-4_truststore_creds
#      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
#    volumes:
#      - data-kafka-4:/var/lib/kafka/data
#      - ./kafka-4-creds:/etc/kafka/jaas
#      - ./kafka-4-creds:/etc/kafka/secrets

#  kafka-5:
#    image: confluentinc/cp-kafka:7.4.4
#    container_name: kafka-5
#    networks:
#      - confluent
#    ports:
#      - 9103:9103
#      - 9104:9104
#    depends_on:
#      - zookeeper-2
#    environment:
#      KAFKA_BROKER_ID: 2
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper-2:2181
#      KAFKA_LISTENERS: BOB://0.0.0.0:9105,PLAINTEXT://0.0.0.0:9103,SASL_SSL://0.0.0.0:9104
#      KAFKA_ADVERTISED_LISTENERS: BOB://kafka-5:9105,PLAINTEXT://localhost:9103,SASL_SSL://localhost:9104
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BOB:PLAINTEXT, PLAINTEXT:PLAINTEXT, SASL_SSL:SASL_SSL
#      KAFKA_INTER_BROKER_LISTENER_NAME: BOB
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
#      KAFKA_DELETE_TOPIC_ENABLE: true
#      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
#      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
#      KAFKA_ZOOKEEPER_SET_ACL: 'true'
#      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
#      KAFKA_SUPER_USERS: "User:admin;User:ANONYMOUS"
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
#      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-5.keystore.pkcs12
#      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-5_keystore_creds
#      KAFKA_SSL_KEY_CREDENTIALS: kafka-5_sslkey_creds
#      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-5.truststore.jks
#      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-5_truststore_creds
#      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
#    volumes:
#      - data-kafka-5:/var/lib/kafka/data
#      - ./kafka-5-creds:/etc/kafka/jaas
#      - ./kafka-5-creds:/etc/kafka/secrets

#  kafka-6:
#    image: confluentinc/cp-kafka:7.4.4
#    container_name: kafka-6
#    networks:
#      - confluent
#    ports:
#      - 9106:9106
#      - 9107:9107
#    depends_on:
#      - zookeeper-2
#    environment:
#      KAFKA_BROKER_ID: 3
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper-2:2181
#      KAFKA_LISTENERS: BOB://0.0.0.0:9108,PLAINTEXT://0.0.0.0:9106,SASL_SSL://0.0.0.0:9107
#      KAFKA_ADVERTISED_LISTENERS: BOB://kafka-6:9108,PLAINTEXT://localhost:9106,SASL_SSL://localhost:9107
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BOB:PLAINTEXT,PLAINTEXT:PLAINTEXT, SASL_SSL:SASL_SSL
#      KAFKA_INTER_BROKER_LISTENER_NAME: BOB
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
#      KAFKA_DELETE_TOPIC_ENABLE: true
#      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
#      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
#      KAFKA_ZOOKEEPER_SET_ACL: 'true'
#      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
#      KAFKA_SUPER_USERS: "User:admin;User:ANONYMOUS"
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
#      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-6.keystore.pkcs12
#      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-6_keystore_creds
#      KAFKA_SSL_KEY_CREDENTIALS: kafka-6_sslkey_creds
#      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-6.truststore.jks
#      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-6_truststore_creds
#      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
#    volumes:
#      - data-kafka-6:/var/lib/kafka/data
#      - ./kafka-6-creds:/etc/kafka/jaas
#      - ./kafka-6-creds:/etc/kafka/secrets

#  topic-creation:
#    image: confluentinc/cp-kafka
#    command: bash -c "cub kafka-ready -z zookeeper-1:2181 1 30 && kafka-topics --zookeeper zookeeper-1:2181 --create --if-not-exists --topic topic-to-mirror --partitions 3 --replication-factor 3"
#    depends_on:
#      - zookeeper-1
#    networks:
#      - confluent

#  mirror-maker:
#    image: confluentinc/cp-kafka
#    volumes:
#      - ./config/consumer.cfg:/etc/consumer.cfg
#      - ./config/producer.cfg:/etc/producer.cfg
#    command: bash -c "cub kafka-ready -z zookeeper-1:2181 1 30 && cub kafka-ready -z zookeeper-2:2181 1 30 && kafka-mirror-maker --consumer.config /etc/consumer.cfg --producer.config /etc/producer.cfg --whitelist topic-to-mirror --num.streams 3"
#    depends_on:
#      - kafka-1
#      - kafka-4
#      - zookeeper-2
#    networks:
#      - confluent

 hadoop-namenode:
   image: apache/hadoop:3.4.1
   container_name: hadoop-namenode
   hostname: hadoop-namenode
   user: "root"
   restart: always
   platform: linux/amd64
   deploy:
     resources:
       limits:
         cpus: "1.0"   # Ограничение использования CPU
         memory: "2g"  # Ограничение использования RAM
   shm_size: 10G
   ports:
     - "9870:9870"  # HTTP-порт для Web UI HDFS NameNode
     - "9000:9000"  # RPC порт для запросов к NameNode
   volumes:
     - ./config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
     - ./config/hdfs-site-namenode.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
     - ./namenode_entrypoint.sh:/namenode_entrypoint.sh
   entrypoint: ["/bin/bash", "/namenode_entrypoint.sh"]
   command: ["hdfs", "namenode"]

 hadoop-datanode-1:
   image: apache/hadoop:3.4.1
   container_name: hadoop-datanode-1
   hostname: hadoop-datanode-1
   user: "root"
   restart: always
   platform: linux/amd64
   deploy:
     resources:
       limits:
         cpus: "1.0"   # Ограничение использования CPU
         memory: "2g"  # Ограничение использования RAM
   shm_size: 10G
   depends_on:
     - hadoop-namenode
   ports:
     - "9864:9864"  # HTTP-порт для Web UI DataNode №1
     - "9970:9970"  # RPC порт для запросов от NameNode
   volumes:
     - ./config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
     - ./config/hdfs-site-datanode-1.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
     - ./datanode_entrypoint.sh:/datanode_entrypoint.sh
   entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
   command: ["hdfs", "datanode"]

 hadoop-datanode-2:
   image: apache/hadoop:3.4.1
   container_name: hadoop-datanode-2
   hostname: hadoop-datanode-2
   user: "root"
   restart: always
   platform: linux/amd64
   deploy:
     resources:
       limits:
         cpus: "1.0"   # Ограничение использования CPU
         memory: "2g"  # Ограничение использования RAM
   shm_size: 10G
   depends_on:
     - hadoop-namenode
   ports:
     - "9865:9865"  # HTTP-порт для Web UI DataNode №2
     - "9971:9971"  # RPC порт для запросов от NameNode
   volumes:
     - ./config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
     - ./config/hdfs-site-datanode-2.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
     - ./datanode_entrypoint.sh:/datanode_entrypoint.sh
   entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
   command: ["hdfs", "datanode"]

 hadoop-datanode-3:
   image: apache/hadoop:3.4.1
   container_name: hadoop-datanode-3
   hostname: hadoop-datanode-3
   user: "root"
   restart: always
   platform: linux/amd64
   deploy:
     resources:
       limits:
         cpus: "1.0"   # Ограничение использования CPU
         memory: "2g"  # Ограничение использования RAM
   shm_size: 10G
   depends_on:
     - hadoop-namenode
   ports:
     - "9866:9866"  # HTTP-порт для Web UI DataNode №3
     - "9972:9972"  # RPC порт для запросов от NameNode
   volumes:
     - ./config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
     - ./config/hdfs-site-datanode-3.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
     - ./datanode_entrypoint.sh:/datanode_entrypoint.sh
   entrypoint: ["/bin/bash", "/datanode_entrypoint.sh"]
   command: ["hdfs", "datanode"]

volumes:
 data-zookeeper-log-1:
 data-zookeeper-log-2:
 data-zookeeper-data-1:
 data-zookeeper-data-2:
 data-kafka-1:
 data-kafka-2:
 data-kafka-3:
 data-kafka-4:
 data-kafka-5:
 data-kafka-6:

networks:
 confluent:
   driver: bridge